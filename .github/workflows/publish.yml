name: Publish Application

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "**/*.bru"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

permissions:
  contents: read
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "build-and-release"
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      current_date: ${{ steps.set-date.outputs.current_date }}
    steps:
      - name: Get current date and time
        id: set-date
        run: echo "current_date=$(TZ=Asia/Seoul date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: [setup] # 이전 Job이 끝난 후에 실행

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 빌드 생성 - 이전 Job Steps 에서 생성한 artifact 사용.
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        # if: ${{ !env.ACT }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.REPOSITORY_OWNER }}/docker-ctrl-api:latest
            ghcr.io/${{ github.repository_owner }}/docker-ctrl-api:${{ needs.setup.outputs.current_date }}
            ghcr.io/${{ github.repository_owner }}/docker-ctrl-api:build-${{ github.run_number }}
          labels: |
            org.opencontainers.image.source=${{ github.SERVER_URL	}}/${{ github.REPOSITORY }}
            org.opencontainers.image.revision=${{ github.SHA }}
